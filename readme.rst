==========
bankparser
==========

Преобразование файлов выписок от банков в qif формат.
Создан для работы с `GnuCash <http://gnucash.org>`_, т.к. GnuCash не умеет импортировать выписки ofx с символами Unicode.

Пока тестовая версия

Установка
---------

Используется Python 3

Зайти в каталог с исходниками::

  python setup.py install
  
Для Windows можно скачать исполняемый файл exe без зависимостей https://github.com/partizand/bankparser/releases 

Есть другой вариант::

  pip install .

Использование
-------------
::

 bankparser convert bank_name in_file_name [--outfile out_file_name]

bank_name
  Имя банка - это имя файла с настройками банка.

in_file_name
  Имя обрабатываемого файла из банка

out_file_name
  Имя сформированного файла (опционально)

Настроенные банки
-----------------

Список настроенных банков можно посмотреть командой::

 bankparser list

Список настроенных банков:

.. banks_start

- `Альфа-директ <http://alfadirect.ru>`_. Отчет о движении денежных средств 2016. XML формат. Не обрабатываются движения денег при сделках покупки/продажи ценных бумаг. Параметр запуска **admoney-xml**. Файл выписки xml.xml
- `Альфа-директ <http://alfadirect.ru>`_. Отчет о движении денежных средств 2016. CSV формат. Обрабатываются все движения по счету. Параметр запуска **admoney**. Файл выписки report.txt
- `Альфа-директ <http://alfadirect.ru>`_. Отчет об урегулированных сделках 2016. CSV формат.. Параметр запуска **adshares**. Файл выписки report.txt
- `ВТБ24 <http://vtb24.ru>`_. . Параметр запуска **vtb24**. Файл выписки statement.csv

.. banks_finish


Настройка наименований счетов
-----------------------------

Если хотите подставлять названия счетов GnuCash вместо номеров счетов из отчетов банка:

Создайте каталог %home%/.bankparser (для Windows это путь типа c:/users/[имя_пользователя]/.bankparser).

В данном каталоге создайте общий файл настройки (будет дейтсвовать для всех банков) **banks.ini**

Для замены номеров счетов на имена счетов в GnuCash создайте секцию [account]::

 [account]
 40817=Активы:Резервы:Банк А
 1307=Активы:Банк Б


Возможно создать конфигурацию для отдельного банка, которая перекроет секции общих настроек (при совпадении названий)
**имя_банка.ini**

Вообще, в ini файлах возможно добавить секци для замены значения любого поля на заданные в словаре секции.
Для этого необходимо создать секцию с именем поля. Для подмены используйте строки::

 значение_в_файле_выписки=подменяемое_значение


Для Альфа-Банка (adshares) можно указать денежный счет списания/зачисления (скобки обязательны)::

 [vars]
 category=[Имя счета в GnuCash]


Сопоставление описания платежа и счета в GnuCash
------------------------------------------------

Для автоматического распознавания счетов в GnuCash по описанию проводки можно создать секцию `[descr_account]`
в ini файле банка (или общем banks.ini).

В формате

::

 строка содержащаяся в описании=Счет:В:GnuCash

Например

::

 [descr_account]
 Зачисление зарплаты=Доходы:Зарплата


Добавление банка
----------------

Для настройки на свой банк необходимо создать файл настройки банка .py в каталоге banks.
Там создается класс Bank наследованием от нужного вида парсера (parsercvs или parserxml) и настроенные банки в каталоге banks.
После этого программа подхватит ваш банк.
Параметр fields

- Для csv. Перечисляет поименно все поля csv файла в том порядке в котором они идут в файле.
- Для XML. Задает пары значений: имя тэга в xml файле -> имя поля. {'tag_name': 'stline field name', ...}

Если необходимо, что бы поле обрабатывалось, его имя должно совпадать с именем поля в в statementline.py
Если в csv поле обрабатывать не нужно, можно указать любое другое имя.

Поля в выписке
--------------

Должны быть указаны все поля в выписке в параметре fields банка.
Нужные имена полей должны совпадать с нижеописанными. Если поле не нужно обрабатывать присвойте ему любое
другое имя

.. fields_start

Описание полей: 

amount
   Сумма. Тип поля: Decimal(0)
amountsign
   Слово указание на списание или зачисление, для определения знака суммы. Тип поля: string
account
   Счет. Тип поля: string
date
   Дата проводки. Тип поля: datetime
description
   Описание. Тип поля: string
action
   Операция (для ценных бумаг): buy, sell. Для приведения к стандартным операциям используйте секцию [action]. Например [action] Покупка. Тип поля: string
securityname
   Имя ценной бумаги. Тип поля: string
price
   Цена (для ценных бумаг). Тип поля: Decimal(0)
quantity
   Количество бумаг. Тип поля: Decimal(0)
commission
   Комиссия (для ценных бумаг). Тип поля: Decimal(0)
payee
   Получатель платежа. Тип поля: string
numbercheck
   Номер чека (Номер транзакции ?). Тип поля: string
category
   Название счета для списания/зачисления (второй счет проводки). Например, Расходы:Питание. Тип поля: string
nkd
   Накопленный куппоный доход (для облигаций). Добавляется к цене облигации. Тип поля: Decimal(0)

.. fields_finish

setup notes
-----------

Некоторые файлы и часть справки генерятся автоматом из build.py

Для генерации файлов .py и добавления информации в readme.rst необходимо запустить build.py

Это нужно, что бы одна и таже информаци не хранилась дважды и не дублировалась.

Информация о возможных полях в выписке хранится в файле statementline.py и оттуда попадает
в qifline.py (только поля для которых задана буква qif) и в справку.

Информация о настроенных банках хранится в banks/\*.py и оттуда попадает в справку.

::

  statementline.py -> qifline.py
                   -> readme.rst (.. fields_start  .. fields_finish)

  banks/*.py       -> readme.rst (.. banks_start  .. banks_finish)

Для добавления обработки поля выписки его нужно добавить в файл statementline.py


QIF notes
---------

QIF забавный стандарт, от которого уже отказались его `создатели <http://web.intuit.com/personal/quicken/qif/>`_ ,  которые сами рекомендуют OFX.
Тем не менее это базовый стандарт для GnuCash. В меню импорта QIF идет первым.
То, что импорт unicode OFX в GnuCash не работает уже в нескольких версиях англоговорящих авторов видимо волнует мало.
Из недостатков QIF:

 - Нет id проводки. Отслеживание дублирования затруднено. GnuCash очень хорошо справляется с дублированием, показывая
   платежи на ту же сумму с той же датой. Но это не удобно.
 - Не определен формат даты. Вообще никак. Можно написать день-месяц-год, а можно месяц-день-год.
   И если день не больше 12, то как понять? GnuCash явно спрашивает в таких случаях (к его чести)


license
-------

GNU GPL 3

author
------

Partizand, xzfantom